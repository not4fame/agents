version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2 # Using a specific recent version
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m # Adjust memory as needed
      - xpack.security.enabled=false # For easier local development, consider true for production
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - agent_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2 # Matching Elasticsearch version
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # Address of Elasticsearch within Docker network
      - SERVER_BASEPATH=/kibana # Required for Kibana to work under /kibana path
      - SERVER_REWRITEBASEPATH=true # Required for Kibana to correctly rewrite its own base path
    networks:
      - agent_network

  redis:
    image: redis:7.2-alpine # Using a specific recent version
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - agent_network

  backend:
    build: ./backend
    container_name: backend_app
    ports:
      - "8000:8000" # Expose port for API
    volumes:
      - ./backend:/usr/src/app # Mount code for development
    depends_on:
      - elasticsearch
      - redis
    networks:
      - agent_network
    environment:
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  frontend:
    build: ./frontend
    container_name: frontend_admin_panel
    ports:
      - "3000:3000" # Expose port for Next.js app
    volumes:
      - ./frontend/admin-panel:/usr/src/app # Mount code for development
      - /usr/src/app/node_modules # Don't mount host node_modules
      - /usr/src/app/.next # Don't mount host .next
    networks:
      - agent_network
    environment:
      - NEXT_PUBLIC_MSAL_CLIENT_ID=${NEXT_PUBLIC_MSAL_CLIENT_ID:-YOUR_MSAL_CLIENT_ID_PLACEHOLDER}
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID:-YOUR_GOOGLE_CLIENT_ID_PLACEHOLDER}
      # Ensures Next.js rebuilds on changes in development
      - WATCHPACK_POLLING=true 
    depends_on:
      - backend 

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_reverse_proxy
    ports:
      - "80:80" # Expose Nginx on port 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Mount custom Nginx config
      - ./nginx/logs:/var/log/nginx # Optional: Mount logs
    depends_on:
      - frontend
      - kibana
      # - backend # Uncomment if proxying backend directly
    networks:
      - agent_network

networks:
  agent_network:
    driver: bridge
